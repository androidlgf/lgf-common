// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.aspectjx_plugin_version = '2.0.10'
    ext.gradle_version = '3.6.1'
    repositories {
        google()
        jcenter() {
            url 'https://jcenter.bintray.com/'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.hujiang.aspectjx:gradle-android-plugin-aspectjx:$aspectjx_plugin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter() {
            url 'https://jcenter.bintray.com'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext.deps = [:]
def deps = [:]

def versions = [:]
versions.kotlin = "1.3.72"
versions.androidx_core = "1.3.0"
versions.androidx_arch = "2.1.0"
versions.androidx_room = "2.2.5"
versions.androidx_appcompat = "1.1.0"
versions.versionCode = 1
versions.versionName = "1.0.0"
ext.versions = versions

def lifecycle_version = [:]
lifecycle_version.lifecycle_viewmodel = "2.2.0"
lifecycle_version.lifecycle_livedata = "2.2.0"
lifecycle_version.lifecycle_runtime = "2.2.0"
lifecycle_version.lifecycle_viewmodel_savedstate = "2.2.0"
lifecycle_version.lifecycle_compiler = "2.2.0"
lifecycle_version.lifecycle_common_java8 = "2.2.0"
lifecycle_version.lifecycle_service = "2.2.0"
lifecycle_version.lifecycle_process = "2.2.0"
lifecycle_version.lifecycle_reactivestreams = "2.2.0"
ext.lifecycle_version = lifecycle_version
//androidx lifecycle Plugin
def androidx_lifecycle = [:]
// ViewModel
androidx_lifecycle.lifecycle_viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version.lifecycle_viewmodel"
// LiveData
androidx_lifecycle.lifecycle_livedata = "androidx.lifecycle:lifecycle-livedata:$lifecycle_version.lifecycle_livedata"
// Lifecycles only (without ViewModel or LiveData)
androidx_lifecycle.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:$lifecycle_version.lifecycle_runtime"

// Saved state module for ViewModel
androidx_lifecycle.lifecycle_viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version.lifecycle_viewmodel_savedstate"

// Annotation processor
androidx_lifecycle.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$lifecycle_version.lifecycle_compiler"
// alternately - if using Java8, use the following instead of lifecycle-compiler
androidx_lifecycle.lifecycle_common_java8 = "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version.lifecycle_common_java8"

// optional - helpers for implementing LifecycleOwner in a Service
androidx_lifecycle.lifecycle_service = "androidx.lifecycle:lifecycle-service:$lifecycle_version.lifecycle_service"

// optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
androidx_lifecycle.lifecycle_process = "androidx.lifecycle:lifecycle-process:$lifecycle_version.lifecycle_process"

// optional - ReactiveStreams support for LiveData
androidx_lifecycle.lifecycle_reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version.lifecycle_reactivestreams"
deps.androidx_lifecycle = androidx_lifecycle

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.3"
ext.build_versions = build_versions
//kotlin Plugin
def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
deps.kotlin = kotlin
//androidx Plugin
def androidx = [:]
androidx.core = "androidx.core:core-ktx:$versions.androidx_core"
// optional - Test helpers for LiveData
androidx.arch = "androidx.arch.core:core-testing:$versions.androidx_arch"

androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"

androidx.room_runtime = "androidx.room:room-runtime:$versions.androidx_room"
//// For Kotlin use kapt instead of annotationProcessor annotationProcessor
androidx.room_compiler = "androidx.room:room-compiler:$versions.androidx_room"
// optional - Kotlin Extensions and Coroutines support for Room
androidx.room_ktx = "androidx.room:room-ktx:$versions.androidx_room"
// optional - RxJava support for Room
androidx.room_rxjava = "androidx.room:room-rxjava2:$versions.androidx_room"
// optional - Guava support for Room, including Optional and ListenableFuture
androidx.room_guava = "androidx.room:room-guava:$versions.androidx_room"
//Test helpers  testImplementation
androidx.room_test = "androidx.room:room-testing:$versions.androidx_room"

deps.androidx = androidx

//AOP Aspectj version
def aspectj_version = [:]
aspectj_version.aspectjrt = "1.9.5"
ext.aspectj_version = aspectj_version
//AOP Aspectj Plugin
def aspectj = [:]
aspectj.aspectjrt = "org.aspectj:aspectjrt:$aspectj_version.aspectjrt"
deps.aspectj = aspectj


ext.deps = deps
